{"version":3,"sources":["utils/api.js","images/logo/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","components/ConfirmPopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_headers","_baseUrl","_sendRequest","newUserData","cardId","isLiked","userCardData","newUserAvatar","path","method","body","options","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","statusText","authorization","Header","className","src","logo","alt","CurrentUserContext","createContext","Card","card","onCardClick","onCardDeleteButtonClick","onCardLike","currentUser","useContext","isOwn","owner","_id","likes","some","like","likeButtonClassName","type","onClick","link","name","length","Main","onEditAvatar","onEditProfile","onAddCardClick","cards","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","title","isOpen","onClose","onSubmit","isLoading","buttonText","buttonLoadingText","children","isButtonDisabled","evt","target","currentTarget","noValidate","disabled","EditProfilePopup","onUpdateUser","useState","setName","setAbout","isNameValid","setIsNameValid","isAboutValid","setIsAboutValid","nameValidationMessage","setNameValidationMessage","aboutValidationMessage","setAboutValidationMessage","setIsButtonDisabled","useEffect","preventDefault","id","placeholder","required","minLength","maxLength","onChange","value","validity","validationMessage","valid","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","isAvatarValid","setIsAvatarValid","avatarValidationMessage","setAvatarValidationMessage","current","ref","AddCardPopup","onAddCard","setLink","isLinkValid","setIsLinkValid","linkValidationMessage","setLinkValidationMessage","ConfirmPopup","onCardDelete","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","handleUpdateCards","updatedCard","prevCardsState","closeAllPopups","all","getUserData","getCards","userData","catch","err","console","log","handleEscClose","key","document","addEventListener","removeEventListener","Provider","toggleCardLike","likedCard","onUpdateCards","addNewCard","newCard","finally","updateUserData","updateUserAvatar","userAvatar","deleteCard","deletedCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c2a8614.chunk.js","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  getCards() {\n    return this._sendRequest('/cards', 'GET');\n  }\n\n  getUserData() {\n    return this._sendRequest('/users/me', 'GET');\n  }\n\n  updateUserData(newUserData) {\n    return this._sendRequest('/users/me', 'PATCH', newUserData);\n  }\n\n  toggleCardLike(cardId, isLiked){\n    if(isLiked){\n      return this._sendRequest(`/cards/likes/${cardId}`, 'PUT');\n    } else {\n      return this._sendRequest(`/cards/likes/${cardId}`, 'DELETE');\n    }\n  }\n\n  addNewCard(userCardData) {\n    return this._sendRequest('/cards', 'POST', userCardData);\n  }\n\n  deleteCard(cardId) {\n    return this._sendRequest(`/cards/${cardId}`, 'DELETE');\n  }\n\n  updateUserAvatar(newUserAvatar) {\n    return this._sendRequest('/users/me/avatar', 'PATCH', newUserAvatar);\n  }\n\n  _sendRequest(path, method, body) {\n    const options = {\n      method: method,\n      headers: this._headers,\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return fetch(`${this._baseUrl}${path}`, options).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  headers: {\n    authorization: '4a378053-5042-44e1-a8f6-f02a12235a31',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/logo.b59368db.svg\";","import logo from '../images/logo/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__section\">\n      <img className=\"logo\" src={logo} alt=\"Логотип Mesto Russia\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction Card({\n  card,\n  onCardClick,\n  onCardDeleteButtonClick,\n  onCardLike\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some((like) => like._id === currentUser._id);\n  const likeButtonClassName = (`button element__button-like ${\n    isLiked ? 'element__button-like_active' : ''\n  }`);\n\n  function handleCardClick() {\n    onCardClick(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDeleteButtonClick(card);\n  }\n\n  function handleCardLike() {\n    onCardLike(card);\n  }\n\n  return (\n    <article className=\"element\" key={card._id}>\n      {isOwn && (\n        <button\n          className=\"button element__button-trash\"\n          type=\"reset\"\n          onClick={handleDeleteClick}\n        ></button>\n      )}\n      <div className=\"element__image-container\">\n        <img\n          className=\"element__image\"\n          src={card.link}\n          alt={card.name}\n          onClick={handleCardClick}\n        />\n      </div>\n      <h2 className=\"element__title\">{card.name}</h2>\n      <div className=\"element__like-container\">\n        <button\n          onClick={handleCardLike}\n          className={likeButtonClassName}\n          type=\"button\"\n        ></button>\n        <span className=\"element__like-counter\">{card.likes.length}</span>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Card from './Card';\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddCardClick,\n  onCardClick,\n  onCardDeleteButtonClick,\n  cards,\n  onCardLike,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content section page__section\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\">\n          <div className=\"profile__overlay\" onClick={onEditAvatar}></div>\n          <img\n            className=\"profile__image\"\n            src={currentUser.avatar}\n            alt=\"Аватар пользователя\"\n          />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__about\">{currentUser.about}</p>\n          <button\n            className=\"button profile__button-edit\"\n            type=\"button\"\n            onClick={onEditProfile}\n          ></button>\n        </div>\n        <button\n          className=\"button profile__button-add\"\n          type=\"button\"\n          onClick={onAddCardClick}\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={onCardClick}\n            onCardDeleteButtonClick={onCardDeleteButtonClick}\n            onCardLike={onCardLike}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer section page__section\">\n      <p className=\"footer__copyright\">\n        &copy; {new Date().getFullYear()} Mesto Russia\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function PopupWithForm({\n  name,\n  title,\n  isOpen,\n  onClose,\n  onSubmit,\n  isLoading,\n  buttonText,\n  buttonLoadingText,\n  children,\n  isButtonDisabled,\n}) {\n\n  function handleOverlayClose(evt) {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <section\n      className={`popup ${isOpen ? 'popup_opened' : ''}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{title}</h2>\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <form\n          className=\"popup__form\"\n          name={name}\n          noValidate\n          onSubmit={onSubmit}\n        >\n          {children}\n          <button\n            className={`button popup__button-submit ${\n              !isButtonDisabled? '' : 'popup__button-submit_disabled'\n            }`}\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            {isLoading ? buttonLoadingText : buttonText}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [isAboutValid, setIsAboutValid] = useState(true);\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\n  const [aboutValidationMessage, setAboutValidationMessage] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n    setNameValidationMessage('');\n    setAboutValidationMessage('');\n    setIsButtonDisabled(true);\n  }, [currentUser, isOpen]);\n\n  function handleNameInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setName(value);\n    setIsNameValid(validity.valid);\n    setNameValidationMessage(validationMessage);\n\n    if (!validity.valid) {\n      setIsButtonDisabled(true);\n    } else if (about && isAboutValid) {\n      setIsButtonDisabled(false);\n    }\n  }\n\n  function handleAboutInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setAbout(value);\n    setIsAboutValid(validity.valid);\n    setAboutValidationMessage(validationMessage);\n\n    if (!validity.valid) {\n      setIsButtonDisabled(true);\n    } else if (name && isNameValid) {\n      setIsButtonDisabled(false);\n    }\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Сохранить\"\n      buttonLoadingText=\"Сохранение...\"\n      isButtonDisabled={isButtonDisabled}\n    >\n      <input\n        id=\"name-input\"\n        className={`popup__input ${\n          nameValidationMessage ? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Имя\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        onChange={handleNameInput}\n        value={name || ''}\n      />\n      <span className=\"popup__error\">{nameValidationMessage}</span>\n      <input\n        id=\"about-input\"\n        className={`popup__input ${\n          aboutValidationMessage ? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"about\"\n        placeholder=\"О себе\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        onChange={handleAboutInput}\n        value={about || ''}\n      />\n      <span className=\"popup__error\">{aboutValidationMessage}</span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  isLoading,\n}) {\n  const avatarRef = useRef();\n  const [isAvatarValid, setIsAvatarValid] = useState(false);\n  const [avatarValidationMessage, setAvatarValidationMessage] = useState('');\n\n  useEffect(() => {\n    avatarRef.current.value = '';\n    setIsAvatarValid(false);\n    setAvatarValidationMessage('');\n  }, [isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  function handleLinkInput(evt) {\n    const { validity, validationMessage } = evt.target;\n    setIsAvatarValid(validity.valid);\n    setAvatarValidationMessage(validationMessage);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Сохранить\"\n      buttonLoadingText=\"Сохранение...\"\n      isButtonDisabled={!isAvatarValid}\n    >\n      <input\n        id=\"avatar-input\"\n        className={`popup__input ${\n          avatarValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"url\"\n        name=\"avatar\"\n        placeholder=\"Ссылка на картинку\"\n        required\n        ref={avatarRef}\n        onChange={handleLinkInput}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {avatarValidationMessage}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddCardPopup({\n  isOpen,\n  onClose,\n  onAddCard,\n  isLoading,\n}) {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n  const [isNameValid, setIsNameValid] = useState(false);\n  const [isLinkValid, setIsLinkValid] = useState(false);\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\n  const [linkValidationMessage, setLinkValidationMessage] = useState('');\n\n  useEffect(() => {\n    setName('');\n    setIsNameValid(false);\n    setNameValidationMessage('');\n    setLink('');\n    setIsLinkValid(false);\n    setLinkValidationMessage('');\n  }, [isOpen]);\n\n  function handleNameInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setName(value);\n    setIsNameValid(validity.valid);\n    setNameValidationMessage(validationMessage);\n  }\n\n  function handleLinkInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setLink(value);\n    setIsLinkValid(validity.valid);\n    setLinkValidationMessage(validationMessage);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddCard({\n      name,\n      link,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add-card\"\n      title=\"Новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Создать\"\n      buttonLoadingText=\"Создание...\"\n      isButtonDisabled={!(isNameValid && isLinkValid)}\n    >\n      <input\n        id=\"name-picture-input\"\n        className={`popup__input ${\n          nameValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Название\"\n        required\n        minLength=\"2\"\n        maxLength=\"30\"\n        onChange={handleNameInput}\n        value={name}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {nameValidationMessage}\n      </span>\n      <input\n        id=\"link-input\"\n        className={`popup__input ${\n          linkValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"url\"\n        name=\"link\"\n        placeholder=\"Ссылка на картинку\"\n        required\n        onChange={handleLinkInput}\n        value={link}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {linkValidationMessage}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddCardPopup;\n","import PopupWithForm from './PopupWithForm';\n\nfunction ConfirmPopup({\n  isOpen,\n  onClose,\n  onCardDelete,\n  isLoading\n}) {\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"confirm\"\n      title=\"Вы уверены?\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Да\"\n      buttonLoadingText =\"Удаление...\"\n      isButtonDisabled={false}\n    />\n  );\n}\n\nexport default ConfirmPopup;\n","function ImagePopup({ card, isOpen, onClose }) {\n\n  function handleOverlayClose(evt) {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <section\n      className={`popup preview-popup ${isOpen ? 'popup_opened' : ''}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"preview-popup__container\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <figure className=\"preview-popup__figure\">\n          <img\n            className=\"preview-popup__image\"\n            src={card.link}\n            alt={card.name}\n          />\n          <figcaption className=\"preview-popup__caption\">\n            {card.name}\n          </figcaption>\n        </figure>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddCardPopup from './AddCardPopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardImageClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleDeleteCardClick(card) {\n    setSelectedCard(card);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleUpdateCards(updatedCard) {\n    setCards((prevCardsState) =>\n      prevCardsState.map((card) =>\n        card._id === updatedCard._id ? updatedCard : card\n      )\n    );\n  }\n\n  function handleUpdateCardsList(deletedCard) {\n    setCards((prevCardsState) =>\n      prevCardsState.filter((card) =>\n        card._id !== deletedCard._id));\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n  }\n\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getCards()])\n      .then(([userData, cards]) => {\n        setCurrentUser(userData);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleUpdateUser(newUserData) {\n    setIsLoading(true);\n    api.updateUserData(newUserData)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdateUserAvatar(newUserAvatar) {\n    setIsLoading(true);\n    api.updateUserAvatar(newUserAvatar)\n      .then((userAvatar) => {\n        setCurrentUser(userAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleAddCardSubmit(userCardData) {\n    setIsLoading(true);\n    api.addNewCard(userCardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\n      api.toggleCardLike(card._id, !isLiked)\n        .then((likedCard) => {\n          handleUpdateCards(likedCard);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n\n  function handleCardDelete() {\n    setIsLoading(true);\n    api.deleteCard(selectedCard._id)\n      .then(() => {\n        handleUpdateCardsList(selectedCard);\n        setIsConfirmPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddCardClick={handleAddCardClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardImageClick}\n          onCardDeleteButtonClick={handleDeleteCardClick}\n          onCardLike={handleCardLike}\n          onUpdateCards={handleUpdateCards}\n          cards={cards}\n        />\n        <Footer />\n        <AddCardPopup\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCardSubmit}\n          isLoading={isLoading}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateUserAvatar}\n          isLoading={isLoading}\n        />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          isLoading={isLoading}\n        />\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}